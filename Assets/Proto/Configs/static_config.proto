syntax = "proto3";

package configs;

// Agent type enumeration.
enum AgentType {
  INVALID_TYPE = 0;

  // Interceptor types.
  VESSEL = 1;
  SHORE_BATTERY = 2;
  CARRIER_INTERCEPTOR = 3;
  MISSILE_INTERCEPTOR = 4;

  // Threat types.
  FIXED_WING_THREAT = 5;
  ROTARY_WING_THREAT = 6;
}

// Power enumeration.
enum Power {
  IDLE = 0;
  LOW = 1;
  CRUISE = 2;
  MIL = 3;
  MAX = 4;
}

// Acceleration configuration.
message AccelerationConfig {
  // Maximum forward acceleration in g.
  float max_forward_acceleration = 1;

  // Maximum reference normal acceleration in g.
  float max_reference_normal_acceleration = 2;

  // Reference speed in m/s.
  float reference_speed = 3;
}

// Boost configuration.
message BoostConfig {
  // Boost time in s.
  float boost_time = 1;

  // Boost acceleration in g.
  float boost_acceleration = 2;
}

// Lift and drag configuration.
message LiftDragConfig {
  // Lift coefficient.
  float lift_coefficient = 1;

  // Drag coefficient.
  float drag_coefficient = 2;

  // Lift-drag ratio.
  float lift_drag_ratio = 3;
}

// Body configuration.
message BodyConfig {
  // Mass in kg.
  float mass = 1;

  // Cross-sectional area in m^2.
  float cross_sectional_area = 2;

  // Fin area in m^2.
  float fin_area = 3;

  // Body area in m^2.
  float body_area = 4;
}

// Hit configuration.
message HitConfig {
  // Hit radius in m.
  float hit_radius = 1;

  // Kill probability.
  float kill_probability = 2;
}

// Controller configuration.
message ControllerConfig {
  // Proportional navigation range threshold in m.
  float proportional_navigation_range_threshold = 1;
}

// Power table entry.
message PowerTableEntry {
  // Power.
  Power power = 1;

  // Speed in m/s.
  float speed = 2;
}

// Visualization configuration.
message VisualizationConfig {
  // Symbol when present.
  string symbol_present = 1;

  // Symbol when destroyed.
  string symbol_destroyed = 2;
}

// Static configuration.
message StaticConfig {
  // Agent name.
  string name = 1;

  // Agent type. The agent type determines the class to be instantiated.
  AgentType agent_type = 2;

  // Unit cost.
  float cost = 3;

  // Acceleration configuration.
  AccelerationConfig acceleration_config = 4;

  // Boost configuration.
  BoostConfig boost_config = 5;

  // Lift and drag configuration.
  LiftDragConfig lift_drag_config = 6;

  // Body configuration.
  BodyConfig body_config = 7;

  // Hit configuration.
  HitConfig hit_config = 8;

  // Controller configuration.
  ControllerConfig controller_config = 9;

  // Power table.
  repeated PowerTableEntry power_table = 10;

  // Visualization configuration.
  VisualizationConfig visualization_config = 11;
}
