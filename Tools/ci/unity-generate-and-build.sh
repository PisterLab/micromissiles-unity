#!/bin/sh

# Wrapper to mirror game-ci runtimes for generating Unity solution files and running dotnet build.
# Designed to run inside a unityci/editor Docker image with the repository mounted at /workspace.

set -eu

ARTIFACTS_PATH=${ARTIFACTS_PATH:-/workspace/artifacts}
GITHUB_WORKSPACE=${GITHUB_WORKSPACE:-/workspace}
PROJECT_PATH=${PROJECT_PATH:-.}
UNITY_PROJECT_PATH=${UNITY_PROJECT_PATH:-${GITHUB_WORKSPACE}/${PROJECT_PATH}}
UNITY_LOG_PATH=${UNITY_LOG_PATH:-${ARTIFACTS_PATH}/unity-generate-sln.log}
DOTNET_WARN_AS_ERROR=${DOTNET_WARN_AS_ERROR:-CS0168;CS0169;CS0219;CS0414;CS0649;CS8019;CS8321;IDE0005;IDE0051;IDE0052;IDE0059;IDE0060}
DOTNET_CONFIGURATION=${DOTNET_CONFIGURATION:-Debug}
BINLOG_PATH=${BINLOG_PATH:-${ARTIFACTS_PATH}/csharp-lint.binlog}

mkdir -p "${ARTIFACTS_PATH}"

echo "Using Unity project at ${UNITY_PROJECT_PATH}"
echo "Unity logs will be written to ${UNITY_LOG_PATH}"

# Ensure the project directory exists inside the container.
if [ ! -d "${UNITY_PROJECT_PATH}" ]; then
  echo "::error::Unity project path '${UNITY_PROJECT_PATH}' does not exist in the container."
  exit 1
fi

echo "Generating solution and project files via Unity."
set +e
unity-editor \
  -batchmode \
  -nographics \
  -logFile "${UNITY_LOG_PATH}" \
  -projectPath "${UNITY_PROJECT_PATH}" \
  -quit \
  -executeMethod GenerateSolutionFiles.Generate
UNITY_EXIT="$?"
set -e

echo "Unity exited with code ${UNITY_EXIT}"

if [ "${UNITY_EXIT}" -ne 0 ]; then
  echo "::error::Unity failed to generate solution files (exit code ${UNITY_EXIT})."
  echo "Unity log output (tail):"
  tail -n 200 "${UNITY_LOG_PATH}" || true
  exit "${UNITY_EXIT}"
fi

SOLUTION_PATH=$(find "${UNITY_PROJECT_PATH}" -maxdepth 1 -name '*.sln' | head -n 1 || true)

if [ -z "${SOLUTION_PATH}" ]; then
  echo "::error::No .sln files were generated by Unity."
  echo "Unity log output (tail):"
  tail -n 200 "${UNITY_LOG_PATH}" || true
  exit 1
fi

echo "Detected solution: ${SOLUTION_PATH}"

DOTNET_ROOT=${DOTNET_ROOT:-/usr/share/dotnet}
export DOTNET_ROOT
PATH="${DOTNET_ROOT}:${PATH:-/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin}"
export PATH

echo "Running dotnet build to enforce compiler warnings as errors."
set +e
dotnet build "${SOLUTION_PATH}" \
  --configuration "${DOTNET_CONFIGURATION}" \
  -nologo \
  -warnaserror:"${DOTNET_WARN_AS_ERROR}" \
  -bl:"${BINLOG_PATH}"
DOTNET_EXIT="$?"
set -e

echo "dotnet build exited with code ${DOTNET_EXIT}"

echo "Attempting to return Unity license (best effort)."
unity-editor -batchmode -nographics -quit -returnlicense || true

exit "${DOTNET_EXIT}"
